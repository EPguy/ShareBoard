{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.80f8f99c4e287edd3739.hot-update.js","sources":["webpack:///./components/AppLayout.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport Link from 'next/link';\r\nimport {Col, Row, Card,Icon, Button, Modal, Form, Input, Upload, Menu, DatePicker } from 'antd';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e) => {\r\n      setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n};\r\n\r\nconst AppLayout = ({userInfo, children}) => {\r\n    const [joinVisible, onChangeJoinVisible] = useState(false);\r\n    const [addVisible, onChangeAddVisible] = useState(false);\r\n    const [settingVisible, onChangeSettingVisible] = useState(false);\r\n    const [className, onChangeClassName] = useInput('');\r\n    const [classIntroduce, onChangeClassIntroduce] = useInput('');\r\n    const [imgURL, onChangeImgURL] = useState('');\r\n    const props = {\r\n        name: 'img',\r\n        action: 'http://18.220.117.207:5000/class/img',\r\n        onChange(info) {\r\n          if (info.file.status !== 'uploading') {\r\n            onChangeImgURL(info.file.name)\r\n          } \r\n        },\r\n      };\r\n    const onSubmit = () => {\r\n        axios.post(\"http://18.220.117.207:5000/class\",{\r\n            className:className,\r\n            info:classIntroduce,\r\n            img: `http://18.220.117.207:5000/${imgURL}`\r\n        }).then(response => {\r\n            console.log(response)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n        console.log(className, classIntroduce, `http://18.220.117.207:5000/${imgURL}`)\r\n    }\r\n    return (\r\n        <div>\r\n                <Menu mode=\"horizontal\" style={{\r\n                                height: '300',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                fontSize: '17px'\r\n                            }}\r\n                            theme=\"dark\"\r\n                            >\r\n                                <Menu.SubMenu title=\"SubMenu\" style={{marginLeft: '20px'}}>\r\n                                    <Menu.Item><Link href=\"/\"><a>메인 화면</a></Link></Menu.Item>\r\n                                    <Menu.Item onClick={() => onChangeAddVisible(true)}><a>클래스 추가</a></Menu.Item>\r\n                                    <Menu.Item onClick={() => onChangeJoinVisible(true)}><a>클래스 가입하기</a></Menu.Item>\r\n                                </Menu.SubMenu>\r\n                                <Menu.Item key=\"class\" style={{ marginLeft: '650px'}}><Link href=\"/class\"><a>작업</a></Link></Menu.Item>\r\n                                <Menu.Item onClick={() => onChangeSettingVisible(true)}><a>관리</a></Menu.Item>\r\n                                <Menu.Item key=\"project\"><Link href=\"/project\"><a>과제</a></Link></Menu.Item>\r\n                                <Menu.Item key=\"group\"><Link href=\"/group\"><a>모둠</a></Link></Menu.Item>\r\n                                <Menu.Item key=\"setting\"><Link href=\"/document\"><a>자료</a></Link></Menu.Item>\r\n                                {\r\n                                    userInfo ? (\r\n                                        <Menu.Item key=\"login\" style={{marginLeft: '600px'}}><Link href=\"/login\"><a>로그아웃</a></Link></Menu.Item>\r\n                                    ) : (\r\n                                        <Menu.Item key=\"login\" style={{marginLeft: '600px'}}><Link href=\"/login\"><a>로그인</a></Link></Menu.Item>\r\n                                    )\r\n                                }\r\n                                \r\n                </Menu>\r\n            \r\n            <Modal\r\n                title=\"클래스 가입하기\"\r\n                visible={joinVisible}\r\n                onOk={() => onChangeJoinVisible(false)}\r\n                onCancel={() => onChangeJoinVisible(false)}\r\n            >\r\n                <Form>\r\n                    <div>\r\n                        <label style={{display:'inline'}} htmlFor=\"join-code\">초대 코드 입력</label>\r\n                        <Input\r\n                            name=\"join-code\"\r\n                        />\r\n                    </div>\r\n                </Form>\r\n            </Modal>\r\n            <Modal\r\n                title=\"클래스 생성하기\"\r\n                visible={addVisible}\r\n                onOk={() => onSubmit()}\r\n                onCancel={() => onChangeAddVisible(false)}\r\n            >\r\n                <Form>\r\n                    <div>\r\n                        <label style={{display:'inline'}} htmlFor=\"class-name\">클래스 명</label>\r\n                        <Input\r\n                            value={className}\r\n                            onChange={onChangeClassName}\r\n                            name=\"class-name\"\r\n                        />\r\n                    </div>\r\n                    <div style={{marginTop: '20px'}}>\r\n                        <label style={{display:'inline'}} htmlFor=\"class-info\">클래스 소개</label>\r\n                        <Input\r\n                            value={classIntroduce}\r\n                            onChange={onChangeClassIntroduce}\r\n                            name=\"class-info\"\r\n                        />\r\n                    </div>\r\n                    <div style={{marginTop: '20px'}}>클래스 대표 이미지</div>\r\n                    <Upload {...props}>\r\n                        <Button>\r\n                            <Icon type=\"upload\" /> Upload\r\n                        </Button>    \r\n                    </Upload>\r\n                </Form>\r\n            </Modal>\r\n            <Modal\r\n                title=\"관리\"\r\n                visible={settingVisible}\r\n                onOk={() => onChangeSettingVisible(false)}\r\n                onCancel={() => onChangeSettingVisible(false)}\r\n            >\r\n                <Form>\r\n                    <div>\r\n                        <label style={{display:'inline'}} htmlFor=\"class-code\">수업 초대 코드</label>\r\n                        <Input\r\n                            name=\"class-code\"\r\n                        />\r\n                    </div>\r\n                    <div style={{marginTop: '20px'}}>\r\n                        <label style={{display:'inline'}} htmlFor=\"student-information\">학생 정보</label>\r\n                        <Input.TextArea\r\n                            rows={10}\r\n                            name=\"student-information\"\r\n                        />\r\n                    </div>\r\n                </Form>\r\n            </Modal>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppLayout;"],"mappings":"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","sourceRoot":""}